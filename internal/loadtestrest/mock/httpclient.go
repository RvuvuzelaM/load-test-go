// Code generated by MockGen. DO NOT EDIT.
// Source: ./service.go

// Package mock_loadtestrest is a generated GoMock package.
package mock_loadtestrest

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHTTPClient is a mock of HTTPClient interface.
type MockHTTPClient struct {
	ctrl     *gomock.Controller
	recorder *MockHTTPClientMockRecorder
}

// MockHTTPClientMockRecorder is the mock recorder for MockHTTPClient.
type MockHTTPClientMockRecorder struct {
	mock *MockHTTPClient
}

// NewMockHTTPClient creates a new mock instance.
func NewMockHTTPClient(ctrl *gomock.Controller) *MockHTTPClient {
	mock := &MockHTTPClient{ctrl: ctrl}
	mock.recorder = &MockHTTPClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHTTPClient) EXPECT() *MockHTTPClientMockRecorder {
	return m.recorder
}

// MakeRequest mocks base method.
func (m *MockHTTPClient) MakeRequest(reqMethod, endpoint, reqBody string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MakeRequest", reqMethod, endpoint, reqBody)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MakeRequest indicates an expected call of MakeRequest.
func (mr *MockHTTPClientMockRecorder) MakeRequest(reqMethod, endpoint, reqBody interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MakeRequest", reflect.TypeOf((*MockHTTPClient)(nil).MakeRequest), reqMethod, endpoint, reqBody)
}
